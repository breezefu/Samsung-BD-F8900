#ifndef _DM_SM_FSM_DEFINITIONS_H
#define _DM_SM_FSM_DEFINITIONS_H
/*!
        Copyright (C) CSR plc 2010
        All rights reserved

\file   dm_sm_fsm_definitions.h

\brief  FSM definitions.
        Contains code generated by fsmgen.pl, version Synergy-2C
*/

#include "csr_bt_core_stack_fsm.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Action function prototypes */
/*{{__FSM_MARKER(DM_SM, ACTION_FN_PROTOTYPES) */
extern FSM_ACTION_FN(sm_af_authenticate_req);
extern FSM_ACTION_FN(sm_af_encrypt_req);
extern FSM_ACTION_FN(sm_af_check_connection);
extern FSM_ACTION_FN(sm_af_auth_cfm_ok);
extern FSM_ACTION_FN(sm_af_auth_cfm_fail);
extern FSM_ACTION_FN(sm_af_enc_cfm_ok);
extern FSM_ACTION_FN(sm_af_hci_set_encryption);
extern FSM_ACTION_FN(sm_af_enc_cfm_fail);
extern FSM_ACTION_FN(sm_af_bond_req);
extern FSM_ACTION_FN(sm_af_bond_cfm_fail);
extern FSM_ACTION_FN(sm_af_access_authenticate);
extern FSM_ACTION_FN(sm_af_access_authorise);
extern FSM_ACTION_FN(sm_af_access_fail);
extern FSM_ACTION_FN(sm_af_check_acl_detach);
extern FSM_ACTION_FN(sm_af_access_encrypt);
extern FSM_ACTION_FN(sm_af_access_success);
extern FSM_ACTION_FN(sm_af_bond_cfm_ok);
extern FSM_ACTION_FN(sm_af_bond_cfm_cancel);
extern FSM_ACTION_FN(sm_af_kill_request);
/*}}__FSM_END_MARKER(DM_SM, ACTION_FN_PROTOTYPES) */

/* State definitions */
/*{{__FSM_MARKER(DM_SM, STATE_DECLARATIONS) */
#define SM_ST_ST_MAX 12
#define SM_ST_IDLE                  ((fsm_state_t) 0)
#define SM_ST_AUTHENTICATING        ((fsm_state_t) 1)
#define SM_ST_ENCRYPTING_AUTH       ((fsm_state_t) 2)
#define SM_ST_ENCRYPTING            ((fsm_state_t) 3)
#define SM_ST_BONDING_PENDING       ((fsm_state_t) 4)
#define SM_ST_ACCESS_PENDING        ((fsm_state_t) 5)
#define SM_ST_ACCESS_AUTHENTICATING ((fsm_state_t) 6)
#define SM_ST_ACCESS_AUTHORISING    ((fsm_state_t) 7)
#define SM_ST_ACCESS_ENCRYPTING     ((fsm_state_t) 8)
#define SM_ST_BONDING               ((fsm_state_t) 9)
#define SM_ST_BONDING_CANCEL        ((fsm_state_t) 10)
#define SM_ST_DEATHBED              ((fsm_state_t) 11)
/*}}__FSM_END_MARKER(DM_SM, STATE_DECLARATIONS) */

/* Event definitions */
/*{{__FSM_MARKER(DM_SM, EVENT_DECLARATIONS) */
#define SM_EV_AUTHENTICATE_REQ    ((fsm_event_t) 0)
#define SM_EV_ENCRYPT_REQ         ((fsm_event_t) 1)
#define SM_EV_BONDING_REQ         ((fsm_event_t) 2)
#define SM_EV_ACCESS_REQ          ((fsm_event_t) 3)
#define SM_EV_HCI_AUTH_OK         ((fsm_event_t) 4)
#define SM_EV_HCI_AUTH_FAIL       ((fsm_event_t) 5)
#define SM_EV_RETRY_AUTHENTICATE  ((fsm_event_t) 6)
#define SM_EV_OK                  ((fsm_event_t) 7)
#define SM_EV_HCI_ENC_CHANGE_OK   ((fsm_event_t) 8)
#define SM_EV_HCI_ENC_CHANGE_FAIL ((fsm_event_t) 9)
#define SM_EV_RETRY_ENCRYPTION    ((fsm_event_t) 10)
#define SM_EV_ACL_READY           ((fsm_event_t) 11)
#define SM_EV_CANCEL_BONDING      ((fsm_event_t) 12)
#define SM_EV_AUTHORISE_OK        ((fsm_event_t) 13)
#define SM_EV_AUTHORISE_FAIL      ((fsm_event_t) 14)
#define SM_EV_PURGE               ((fsm_event_t) 15)
#define SM_EV_PURGED              ((fsm_event_t) 16)
/*}}__FSM_END_MARKER(DM_SM, EVENT_DECLARATIONS) */

/* Event definitions */
/*{{__FSM_MARKER(DM_SM, EVENT_DECLARATIONS EXT1) */
/*}}__FSM_END_MARKER(DM_SM, EVENT_DECLARATIONS EXT1) */

/* Action function index */
/*{{__FSM_MARKER(DM_SM, ACTION_FN_INDEX) */
#define SM_AC_MAX 19
#define SM_AC_authenticate_req    ((fsm_action_t) 0)
#define SM_AC_encrypt_req         ((fsm_action_t) 1)
#define SM_AC_check_connection    ((fsm_action_t) 2)
#define SM_AC_auth_cfm_ok         ((fsm_action_t) 3)
#define SM_AC_auth_cfm_fail       ((fsm_action_t) 4)
#define SM_AC_enc_cfm_ok          ((fsm_action_t) 5)
#define SM_AC_hci_set_encryption  ((fsm_action_t) 6)
#define SM_AC_enc_cfm_fail        ((fsm_action_t) 7)
#define SM_AC_bond_req            ((fsm_action_t) 8)
#define SM_AC_bond_cfm_fail       ((fsm_action_t) 9)
#define SM_AC_access_authenticate ((fsm_action_t) 10)
#define SM_AC_access_authorise    ((fsm_action_t) 11)
#define SM_AC_access_fail         ((fsm_action_t) 12)
#define SM_AC_check_acl_detach    ((fsm_action_t) 13)
#define SM_AC_access_encrypt      ((fsm_action_t) 14)
#define SM_AC_access_success      ((fsm_action_t) 15)
#define SM_AC_bond_cfm_ok         ((fsm_action_t) 16)
#define SM_AC_bond_cfm_cancel     ((fsm_action_t) 17)
#define SM_AC_kill_request        ((fsm_action_t) 18)
#define SM_AC_NULL (FSM16_ACTION_NULL)
/*}}__FSM_END_MARKER(DM_SM, ACTION_FN_INDEX) */

/* State machine definition */
/*{{__FSM_MARKER(DM_SM, FSM_DEFINITION) */
extern const FSM_SPARSE16_DEFINITION_T dm_sm_fsm;
/*}}__FSM_END_MARKER(DM_SM, FSM_DEFINITION) */

#ifdef __cplusplus
}
#endif

#endif /* _DM_SM_FSM_DEFINITIONS_H */

