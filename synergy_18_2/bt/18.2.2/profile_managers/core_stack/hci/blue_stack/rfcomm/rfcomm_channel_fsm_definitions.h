#ifndef _RFCOMM_CHANNEL_FSM_DEFINITIONS_H
#define _RFCOMM_CHANNEL_FSM_DEFINITIONS_H
/*!
        Copyright (C) CSR plc 2010
        All rights reserved

\file   rfcomm_channel_fsm_definitions.h

\brief  FSM definitions.
        Contains code generated by fsmgen.pl, version Synergy-2C
*/

#include "csr_bt_core_stack_fsm.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Action function prototypes */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, ACTION_FN_PROTOTYPES) */
extern FSM_ACTION_FN(rfc_af_access_granted);
extern FSM_ACTION_FN(rfc_af_client_par_neg_cmd);
extern FSM_ACTION_FN(rfc_af_server_request_cmd);
extern FSM_ACTION_FN(rfc_af_cancel_connection);
extern FSM_ACTION_FN(rfc_af_protocol_disconnect);
extern FSM_ACTION_FN(rfc_af_client_par_neg_cfm);
extern FSM_ACTION_FN(rfc_af_client_disconnect);
extern FSM_ACTION_FN(rfc_af_local_disconnect_request);
extern FSM_ACTION_FN(rfc_af_remote_disconnect_request);
extern FSM_ACTION_FN(rfc_af_access_request);
extern FSM_ACTION_FN(rfc_af_server_par_neg_rsp);
extern FSM_ACTION_FN(rfc_af_server_disconnect);
extern FSM_ACTION_FN(rfc_af_protocol_disconnect_cfg);
extern FSM_ACTION_FN(rfc_af_access_denied);
extern FSM_ACTION_FN(rfc_af_client_connected);
extern FSM_ACTION_FN(rfc_af_server_connected);
extern FSM_ACTION_FN(rfc_af_local_disconnect_pending);
extern FSM_ACTION_FN(rfc_af_client_msc_request);
extern FSM_ACTION_FN(rfc_af_client_msc_confirm);
extern FSM_ACTION_FN(rfc_af_server_msc_response);
extern FSM_ACTION_FN(rfc_af_msc_complete);
extern FSM_ACTION_FN(rfc_af_protocol_disconnect_open);
extern FSM_ACTION_FN(rfc_af_local_disconnect_confirm);
extern FSM_ACTION_FN(rfc_af_disconnect_xover);
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, ACTION_FN_PROTOTYPES) */

/* State definitions */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, STATE_DECLARATIONS) */
#define RFC_ST_ST_MAX 9
#define RFC_ST_DISCONNECTED          ((fsm_state_t) 0)
#define RFC_ST_CLIENT_PENDING_PARNEG ((fsm_state_t) 1)
#define RFC_ST_CLIENT_CONFIGURING    ((fsm_state_t) 2)
#define RFC_ST_SERVER_CONFIGURING    ((fsm_state_t) 3)
#define RFC_ST_CHECKING_ACCESS       ((fsm_state_t) 4)
#define RFC_ST_CONNECTING            ((fsm_state_t) 5)
#define RFC_ST_MSC_PENDING           ((fsm_state_t) 6)
#define RFC_ST_CONNECTED             ((fsm_state_t) 7)
#define RFC_ST_DISCONNECTING         ((fsm_state_t) 8)
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, STATE_DECLARATIONS) */

/* Event definitions */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, EVENT_DECLARATIONS) */
#define RFC_EV_OPEN_REQ_MUX        ((fsm_event_t) 0)
#define RFC_EV_OPEN_IND_MUX        ((fsm_event_t) 1)
#define RFC_EV_PARNEG_REQ          ((fsm_event_t) 2)
#define RFC_EV_SERVER_IND          ((fsm_event_t) 3)
#define RFC_EV_DISCONNECT_REQ      ((fsm_event_t) 4)
#define RFC_EV_PROTOCOL_DISCONNECT ((fsm_event_t) 5)
#define RFC_EV_PARNEG_CFM          ((fsm_event_t) 6)
#define RFC_EV_DISC_MODE_CFM       ((fsm_event_t) 7)
#define RFC_EV_DISCONNECT_IND      ((fsm_event_t) 8)
#define RFC_EV_OPEN_REQ_DLC        ((fsm_event_t) 9)
#define RFC_EV_PARNEG_IND          ((fsm_event_t) 10)
#define RFC_EV_OPEN_IND_DLC        ((fsm_event_t) 11)
#define RFC_EV_DISC_MODE_RSP       ((fsm_event_t) 12)
#define RFC_EV_ACCESS_CONFIRM      ((fsm_event_t) 13)
#define RFC_EV_ACCESS_DECLINE      ((fsm_event_t) 14)
#define RFC_EV_ACK_CFM_MUX         ((fsm_event_t) 15)
#define RFC_EV_ACK_CFM             ((fsm_event_t) 16)
#define RFC_EV_ACK_CFM_DISC        ((fsm_event_t) 17)
#define RFC_EV_ACK_RSP_MUX         ((fsm_event_t) 18)
#define RFC_EV_ACK_RSP             ((fsm_event_t) 19)
#define RFC_EV_MSC_REQ             ((fsm_event_t) 20)
#define RFC_EV_MSC_CFM             ((fsm_event_t) 21)
#define RFC_EV_MSC_RSP             ((fsm_event_t) 22)
#define RFC_EV_MSC_COMPLETE        ((fsm_event_t) 23)
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, EVENT_DECLARATIONS) */

/* Event definitions */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, EVENT_DECLARATIONS EXT1) */
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, EVENT_DECLARATIONS EXT1) */

/* Action function index */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, ACTION_FN_INDEX) */
#define RFC_AC_MAX 24
#define RFC_AC_access_granted            ((fsm_action_t) 0)
#define RFC_AC_client_par_neg_cmd        ((fsm_action_t) 1)
#define RFC_AC_server_request_cmd        ((fsm_action_t) 2)
#define RFC_AC_cancel_connection         ((fsm_action_t) 3)
#define RFC_AC_protocol_disconnect       ((fsm_action_t) 4)
#define RFC_AC_client_par_neg_cfm        ((fsm_action_t) 5)
#define RFC_AC_client_disconnect         ((fsm_action_t) 6)
#define RFC_AC_local_disconnect_request  ((fsm_action_t) 7)
#define RFC_AC_remote_disconnect_request ((fsm_action_t) 8)
#define RFC_AC_access_request            ((fsm_action_t) 9)
#define RFC_AC_server_par_neg_rsp        ((fsm_action_t) 10)
#define RFC_AC_server_disconnect         ((fsm_action_t) 11)
#define RFC_AC_protocol_disconnect_cfg   ((fsm_action_t) 12)
#define RFC_AC_access_denied             ((fsm_action_t) 13)
#define RFC_AC_client_connected          ((fsm_action_t) 14)
#define RFC_AC_server_connected          ((fsm_action_t) 15)
#define RFC_AC_local_disconnect_pending  ((fsm_action_t) 16)
#define RFC_AC_client_msc_request        ((fsm_action_t) 17)
#define RFC_AC_client_msc_confirm        ((fsm_action_t) 18)
#define RFC_AC_server_msc_response       ((fsm_action_t) 19)
#define RFC_AC_msc_complete              ((fsm_action_t) 20)
#define RFC_AC_protocol_disconnect_open  ((fsm_action_t) 21)
#define RFC_AC_local_disconnect_confirm  ((fsm_action_t) 22)
#define RFC_AC_disconnect_xover          ((fsm_action_t) 23)
#define RFC_AC_NULL (FSM16_ACTION_NULL)
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, ACTION_FN_INDEX) */

/* State machine definition */
/*{{__FSM_MARKER(RFCOMM_CHANNEL, FSM_DEFINITION) */
extern const FSM_SPARSE16_DEFINITION_T rfcomm_channel_fsm;
/*}}__FSM_END_MARKER(RFCOMM_CHANNEL, FSM_DEFINITION) */

#ifdef __cplusplus
}
#endif

#endif /* _RFCOMM_CHANNEL_FSM_DEFINITIONS_H */

