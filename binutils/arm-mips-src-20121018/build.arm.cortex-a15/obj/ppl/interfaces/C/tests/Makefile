# Makefile.in generated by automake 1.11.1 from Makefile.am.
# interfaces/C/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Automake source file for the Parma Polyhedra Library.
# Copyright (C) 2001-2010 Roberto Bagnara <bagnara@cs.unipr.it>
# Copyright (C) 2010-2011 BUGSENG srl (http://bugseng.com)
#
# This file is part of the Parma Polyhedra Library (PPL).
#
# The PPL is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# The PPL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02111-1307, USA.
#
# For the most up-to-date information see the Parma Polyhedra Library
# site: http://www.cs.unipr.it/ppl/ .

VPATH = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/interfaces/C/tests
pkgdatadir = $(datadir)/ppl
pkgincludedir = $(includedir)/ppl
pkglibdir = $(libdir)/ppl
pkglibexecdir = $(libexecdir)/ppl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
TESTS = $(am__EXEEXT_1) $(am__EXEEXT_2)
XFAIL_TESTS =
check_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_4)
subdir = interfaces/C/tests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_check_ciao.m4 \
	$(top_srcdir)/m4/ac_check_fpu_control.m4 \
	$(top_srcdir)/m4/ac_check_gmp.m4 \
	$(top_srcdir)/m4/ac_check_sicstus_prolog.m4 \
	$(top_srcdir)/m4/ac_check_swi_prolog.m4 \
	$(top_srcdir)/m4/ac_check_xsb_prolog.m4 \
	$(top_srcdir)/m4/ac_check_yap.m4 \
	$(top_srcdir)/m4/ac_cxx_attribute_weak.m4 \
	$(top_srcdir)/m4/ac_cxx_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_double_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_flexible_arrays.m4 \
	$(top_srcdir)/m4/ac_cxx_float_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_float_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_ieee_inexact_flag.m4 \
	$(top_srcdir)/m4/ac_cxx_limit_memory.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_binary_format.m4 \
	$(top_srcdir)/m4/ac_cxx_long_double_exact_output.m4 \
	$(top_srcdir)/m4/ac_cxx_plain_char_is_signed.m4 \
	$(top_srcdir)/m4/ac_cxx_proper_long_double.m4 \
	$(top_srcdir)/m4/ac_cxx_remainder_bug.m4 \
	$(top_srcdir)/m4/ac_prog_jar.m4 \
	$(top_srcdir)/m4/ac_prog_java.m4 \
	$(top_srcdir)/m4/ac_prog_javac.m4 \
	$(top_srcdir)/m4/ac_prog_javah.m4 \
	$(top_srcdir)/m4/ac_text_md5sum.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/m4.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
libppl_c_tests_a_AR = $(AR) $(ARFLAGS)
libppl_c_tests_a_LIBADD =
am_libppl_c_tests_a_OBJECTS = libppl_c_tests_a-ppl_c_test.$(OBJEXT)
libppl_c_tests_a_OBJECTS = $(am_libppl_c_tests_a_OBJECTS)
am__EXEEXT_1 = formatted_output$(EXEEXT) pip_test$(EXEEXT)
#am__EXEEXT_2 = watchdog1$(EXEEXT) \
#	weightwatch1$(EXEEXT)
am__EXEEXT_3 = $(am__EXEEXT_1) $(am__EXEEXT_2)
am__EXEEXT_4 =
am_formatted_output_OBJECTS = formatted_output.$(OBJEXT) \
	print_to_buffer.$(OBJEXT)
formatted_output_OBJECTS = $(am_formatted_output_OBJECTS)
formatted_output_LDADD = $(LDADD)
formatted_output_DEPENDENCIES = libppl_c_tests.a \
	$(top_builddir)/interfaces/C/libppl_c.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_pip_test_OBJECTS = pip_test.$(OBJEXT)
pip_test_OBJECTS = $(am_pip_test_OBJECTS)
pip_test_LDADD = $(LDADD)
pip_test_DEPENDENCIES = libppl_c_tests.a \
	$(top_builddir)/interfaces/C/libppl_c.la
am__watchdog1_SOURCES_DIST = watchdog1.c
am__objects_1 = watchdog1-watchdog1.$(OBJEXT)
#am_watchdog1_OBJECTS = $(am__objects_1)
watchdog1_OBJECTS = $(am_watchdog1_OBJECTS)
am__DEPENDENCIES_1 = libppl_c_tests.a \
	$(top_builddir)/interfaces/C/libppl_c.la
#am__DEPENDENCIES_2 =  \
#	$(am__DEPENDENCIES_1) \
#	$(top_builddir)/Watchdog/src/libpwl.la
#watchdog1_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2)
am__weightwatch1_SOURCES_DIST = weightwatch1.c
am__objects_2 = weightwatch1-weightwatch1.$(OBJEXT)
#am_weightwatch1_OBJECTS =  \
#	$(am__objects_2)
weightwatch1_OBJECTS = $(am_weightwatch1_OBJECTS)
#weightwatch1_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libppl_c_tests_a_SOURCES) \
	$(nodist_EXTRA_libppl_c_tests_a_SOURCES) \
	$(formatted_output_SOURCES) \
	$(nodist_EXTRA_formatted_output_SOURCES) $(pip_test_SOURCES) \
	$(nodist_EXTRA_pip_test_SOURCES) $(watchdog1_SOURCES) \
	$(nodist_EXTRA_watchdog1_SOURCES) $(weightwatch1_SOURCES) \
	$(nodist_EXTRA_weightwatch1_SOURCES)
DIST_SOURCES = $(libppl_c_tests_a_SOURCES) $(formatted_output_SOURCES) \
	$(pip_test_SOURCES) $(am__watchdog1_SOURCES_DIST) \
	$(am__weightwatch1_SOURCES_DIST)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run aclocal-1.11
AMTAR = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run tar
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run autoconf
AUTOHEADER = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run autoheader
AUTOMAKE = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -O2 -frounding-math  -W -Wall
CIAO_PROLOG = 
CIAO_PROLOG_INCLUDE_OPTIONS = 
CONFIGURE_OPTIONS = 
CPP = gcc -E
CPPFLAGS = -I/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O2 -frounding-math  -W -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GNU_PROLOG = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2013-04-04
JAR = no
JAVA = no
JAVAC = no
JAVAH = no
JNIFLAGS = -I -I/linux
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib
LIBEXT = a
LIBGMP = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib/libgmp.a
LIBGMPXX = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib/libgmpxx.a /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib/libgmp.a
LIBGMPXX_PREFIX = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1
LIBGMP_PREFIX = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBGMP = -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmp
LTLIBGMPXX = -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmpxx -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmp
LTLIBOBJS = 
M4 = /usr/bin/m4
M4_DEBUGFILE = --debugfile
MAKEINFO = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/missing --run makeinfo
MD5SUM = md5sum
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OCAMLBEST = 
OCAMLBUILD = no
OCAMLC = no
OCAMLCDOTOPT = 
OCAMLDEP = no
OCAMLDOC = no
OCAMLLIB = 
OCAMLMKLIB = no
OCAMLMKTOP = no
OCAMLOPT = 
OCAMLOPTDOTOPT = 
OCAMLVERSION = 
OTOOL = 
OTOOL64 = 
PACKAGE = ppl
PACKAGE_BUGREPORT = ppl-devel@cs.unipr.it
PACKAGE_NAME = the Parma Polyhedra Library
PACKAGE_STRING = the Parma Polyhedra Library 0.11.2
PACKAGE_TARNAME = ppl
PACKAGE_URL = 
PACKAGE_VERSION = 0.11.2
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PPL_VERSION_BETA = 0
PPL_VERSION_MAJOR = 0
PPL_VERSION_MINOR = 11
PPL_VERSION_REVISION = 2
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHREXT = .so
SICSTUS_PROLOG_INCLUDE_OPTIONS = 
STRIP = strip
SWI_PROLOG = 
SWI_PROLOG_INCLUDE_OPTIONS = 
SWI_PROLOG_LD = 
SWI_PROLOG_LD_OPTIONS = 
TEXT_MD5SUM = md5sum -t
VALGRIND = 
VERSION = 0.11.2
XSB_PROLOG_INCLUDE_OPTIONS = 
YAP_PROLOG = 
YAP_PROLOG_INCLUDE_OPTIONS = 
YAP_PROLOG_LD_OPTIONS = 
abs_builddir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/obj/ppl/interfaces/C/tests
abs_srcdir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/interfaces/C/tests
abs_top_builddir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/obj/ppl
abs_top_srcdir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
ciao_prolog = 
coefficient_mnemonic = mpz
datadir = ${datarootdir}
datarootdir = ${prefix}/share
debug_flag = -DNDEBUG=1
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
extra_includes = 
extra_libraries = -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmpxx -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmp
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
mlgmp_dir = +gmp
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1
program_transform_name = s,x,x,
psdir = ${docdir}
required_instantiations = Polyhedron@Grid@Rational_Box@BD_Shape<mpz_class>@BD_Shape<mpq_class>@Octagonal_Shape<mpz_class>@Octagonal_Shape<mpq_class>@Constraints_Product<C_Polyhedron,Grid>@Pointset_Powerset<C_Polyhedron>@Pointset_Powerset<NNC_Polyhedron>@Double_Box@BD_Shape<double>@Octagonal_Shape<double>
required_instantiations_c_cxx_headers = ppl_c_Polyhedron.hh ppl_c_Grid.hh ppl_c_Rational_Box.hh ppl_c_BD_Shape_mpz_class.hh ppl_c_BD_Shape_mpq_class.hh ppl_c_Octagonal_Shape_mpz_class.hh ppl_c_Octagonal_Shape_mpq_class.hh ppl_c_Constraints_Product_C_Polyhedron_Grid.hh ppl_c_Pointset_Powerset_C_Polyhedron.hh ppl_c_Pointset_Powerset_NNC_Polyhedron.hh ppl_c_Double_Box.hh ppl_c_BD_Shape_double.hh ppl_c_Octagonal_Shape_double.hh
required_instantiations_c_cxx_objects = ppl_c_Polyhedron.lo ppl_c_Grid.lo ppl_c_Rational_Box.lo ppl_c_BD_Shape_mpz_class.lo ppl_c_BD_Shape_mpq_class.lo ppl_c_Octagonal_Shape_mpz_class.lo ppl_c_Octagonal_Shape_mpq_class.lo ppl_c_Constraints_Product_C_Polyhedron_Grid.lo ppl_c_Pointset_Powerset_C_Polyhedron.lo ppl_c_Pointset_Powerset_NNC_Polyhedron.lo ppl_c_Double_Box.lo ppl_c_BD_Shape_double.lo ppl_c_Octagonal_Shape_double.lo
required_instantiations_c_cxx_sources = ppl_c_Polyhedron.cc ppl_c_Grid.cc ppl_c_Rational_Box.cc ppl_c_BD_Shape_mpz_class.cc ppl_c_BD_Shape_mpq_class.cc ppl_c_Octagonal_Shape_mpz_class.cc ppl_c_Octagonal_Shape_mpq_class.cc ppl_c_Constraints_Product_C_Polyhedron_Grid.cc ppl_c_Pointset_Powerset_C_Polyhedron.cc ppl_c_Pointset_Powerset_NNC_Polyhedron.cc ppl_c_Double_Box.cc ppl_c_BD_Shape_double.cc ppl_c_Octagonal_Shape_double.cc
required_instantiations_canonical_names = Polyhedron@Grid@Rational_Box@BD_Shape_mpz_class@BD_Shape_mpq_class@Octagonal_Shape_mpz_class@Octagonal_Shape_mpq_class@Constraints_Product_C_Polyhedron_Grid@Pointset_Powerset_C_Polyhedron@Pointset_Powerset_NNC_Polyhedron@Double_Box@BD_Shape_double@Octagonal_Shape_double
required_instantiations_java_classes = Polyhedron.class C_Polyhedron.class NNC_Polyhedron.class Grid.class Rational_Box.class BD_Shape_mpz_class.class BD_Shape_mpq_class.class Octagonal_Shape_mpz_class.class Octagonal_Shape_mpq_class.class Constraints_Product_C_Polyhedron_Grid.class Pointset_Powerset_C_Polyhedron.class Pointset_Powerset_C_Polyhedron_Iterator.class Pointset_Powerset_NNC_Polyhedron.class Pointset_Powerset_NNC_Polyhedron_Iterator.class Double_Box.class BD_Shape_double.class Octagonal_Shape_double.class
required_instantiations_java_cxx_headers = parma_polyhedra_library.Polyhedron parma_polyhedra_library.C_Polyhedron parma_polyhedra_library.NNC_Polyhedron parma_polyhedra_library.Grid parma_polyhedra_library.Rational_Box parma_polyhedra_library.BD_Shape_mpz_class parma_polyhedra_library.BD_Shape_mpq_class parma_polyhedra_library.Octagonal_Shape_mpz_class parma_polyhedra_library.Octagonal_Shape_mpq_class parma_polyhedra_library.Constraints_Product_C_Polyhedron_Grid parma_polyhedra_library.Pointset_Powerset_C_Polyhedron parma_polyhedra_library.Pointset_Powerset_C_Polyhedron_Iterator parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron parma_polyhedra_library.Pointset_Powerset_NNC_Polyhedron_Iterator parma_polyhedra_library.Double_Box parma_polyhedra_library.BD_Shape_double parma_polyhedra_library.Octagonal_Shape_double
required_instantiations_java_cxx_headers_sources = parma_polyhedra_library_Polyhedron.h parma_polyhedra_library_C_Polyhedron.h parma_polyhedra_library_NNC_Polyhedron.h parma_polyhedra_library_Grid.h parma_polyhedra_library_Rational_Box.h parma_polyhedra_library_BD_Shape_mpz_class.h parma_polyhedra_library_BD_Shape_mpq_class.h parma_polyhedra_library_Octagonal_Shape_mpz_class.h parma_polyhedra_library_Octagonal_Shape_mpq_class.h parma_polyhedra_library_Constraints_Product_C_Polyhedron_Grid.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_C_Polyhedron_Iterator.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron.h parma_polyhedra_library_Pointset_Powerset_NNC_Polyhedron_Iterator.h parma_polyhedra_library_Double_Box.h parma_polyhedra_library_BD_Shape_double.h parma_polyhedra_library_Octagonal_Shape_double.h
required_instantiations_java_cxx_objects = ppl_java_Polyhedron.lo ppl_java_Grid.lo ppl_java_Rational_Box.lo ppl_java_BD_Shape_mpz_class.lo ppl_java_BD_Shape_mpq_class.lo ppl_java_Octagonal_Shape_mpz_class.lo ppl_java_Octagonal_Shape_mpq_class.lo ppl_java_Constraints_Product_C_Polyhedron_Grid.lo ppl_java_Pointset_Powerset_C_Polyhedron.lo ppl_java_Pointset_Powerset_NNC_Polyhedron.lo ppl_java_Double_Box.lo ppl_java_BD_Shape_double.lo ppl_java_Octagonal_Shape_double.lo
required_instantiations_java_cxx_sources = ppl_java_Polyhedron.cc ppl_java_Grid.cc ppl_java_Rational_Box.cc ppl_java_BD_Shape_mpz_class.cc ppl_java_BD_Shape_mpq_class.cc ppl_java_Octagonal_Shape_mpz_class.cc ppl_java_Octagonal_Shape_mpq_class.cc ppl_java_Constraints_Product_C_Polyhedron_Grid.cc ppl_java_Pointset_Powerset_C_Polyhedron.cc ppl_java_Pointset_Powerset_NNC_Polyhedron.cc ppl_java_Double_Box.cc ppl_java_BD_Shape_double.cc ppl_java_Octagonal_Shape_double.cc
required_instantiations_java_sources = Polyhedron.java C_Polyhedron.java NNC_Polyhedron.java Grid.java Rational_Box.java BD_Shape_mpz_class.java BD_Shape_mpq_class.java Octagonal_Shape_mpz_class.java Octagonal_Shape_mpq_class.java Constraints_Product_C_Polyhedron_Grid.java Pointset_Powerset_C_Polyhedron.java Pointset_Powerset_C_Polyhedron_Iterator.java Pointset_Powerset_NNC_Polyhedron.java Pointset_Powerset_NNC_Polyhedron_Iterator.java Double_Box.java BD_Shape_double.java Octagonal_Shape_double.java
required_instantiations_ocaml_cxx_headers = ppl_ocaml_Polyhedron.hh ppl_ocaml_Grid.hh ppl_ocaml_Rational_Box.hh ppl_ocaml_BD_Shape_mpz_class.hh ppl_ocaml_BD_Shape_mpq_class.hh ppl_ocaml_Octagonal_Shape_mpz_class.hh ppl_ocaml_Octagonal_Shape_mpq_class.hh ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.hh ppl_ocaml_Pointset_Powerset_C_Polyhedron.hh ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.hh ppl_ocaml_Double_Box.hh ppl_ocaml_BD_Shape_double.hh ppl_ocaml_Octagonal_Shape_double.hh
required_instantiations_ocaml_cxx_objects = ppl_ocaml_Polyhedron.o ppl_ocaml_Grid.o ppl_ocaml_Rational_Box.o ppl_ocaml_BD_Shape_mpz_class.o ppl_ocaml_BD_Shape_mpq_class.o ppl_ocaml_Octagonal_Shape_mpz_class.o ppl_ocaml_Octagonal_Shape_mpq_class.o ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.o ppl_ocaml_Pointset_Powerset_C_Polyhedron.o ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.o ppl_ocaml_Double_Box.o ppl_ocaml_BD_Shape_double.o ppl_ocaml_Octagonal_Shape_double.o
required_instantiations_ocaml_cxx_sources = ppl_ocaml_Polyhedron.cc ppl_ocaml_Grid.cc ppl_ocaml_Rational_Box.cc ppl_ocaml_BD_Shape_mpz_class.cc ppl_ocaml_BD_Shape_mpq_class.cc ppl_ocaml_Octagonal_Shape_mpz_class.cc ppl_ocaml_Octagonal_Shape_mpq_class.cc ppl_ocaml_Constraints_Product_C_Polyhedron_Grid.cc ppl_ocaml_Pointset_Powerset_C_Polyhedron.cc ppl_ocaml_Pointset_Powerset_NNC_Polyhedron.cc ppl_ocaml_Double_Box.cc ppl_ocaml_BD_Shape_double.cc ppl_ocaml_Octagonal_Shape_double.cc
required_instantiations_prolog_cxx_headers = ppl_prolog_Polyhedron.hh ppl_prolog_Grid.hh ppl_prolog_Rational_Box.hh ppl_prolog_BD_Shape_mpz_class.hh ppl_prolog_BD_Shape_mpq_class.hh ppl_prolog_Octagonal_Shape_mpz_class.hh ppl_prolog_Octagonal_Shape_mpq_class.hh ppl_prolog_Constraints_Product_C_Polyhedron_Grid.hh ppl_prolog_Pointset_Powerset_C_Polyhedron.hh ppl_prolog_Pointset_Powerset_NNC_Polyhedron.hh ppl_prolog_Double_Box.hh ppl_prolog_BD_Shape_double.hh ppl_prolog_Octagonal_Shape_double.hh
required_instantiations_prolog_cxx_objects = ppl_prolog_Polyhedron.lo ppl_prolog_Grid.lo ppl_prolog_Rational_Box.lo ppl_prolog_BD_Shape_mpz_class.lo ppl_prolog_BD_Shape_mpq_class.lo ppl_prolog_Octagonal_Shape_mpz_class.lo ppl_prolog_Octagonal_Shape_mpq_class.lo ppl_prolog_Constraints_Product_C_Polyhedron_Grid.lo ppl_prolog_Pointset_Powerset_C_Polyhedron.lo ppl_prolog_Pointset_Powerset_NNC_Polyhedron.lo ppl_prolog_Double_Box.lo ppl_prolog_BD_Shape_double.lo ppl_prolog_Octagonal_Shape_double.lo
required_instantiations_prolog_cxx_sources = ppl_prolog_Polyhedron.cc ppl_prolog_Grid.cc ppl_prolog_Rational_Box.cc ppl_prolog_BD_Shape_mpz_class.cc ppl_prolog_BD_Shape_mpq_class.cc ppl_prolog_Octagonal_Shape_mpz_class.cc ppl_prolog_Octagonal_Shape_mpq_class.cc ppl_prolog_Constraints_Product_C_Polyhedron_Grid.cc ppl_prolog_Pointset_Powerset_C_Polyhedron.cc ppl_prolog_Pointset_Powerset_NNC_Polyhedron.cc ppl_prolog_Double_Box.cc ppl_prolog_BD_Shape_double.cc ppl_prolog_Octagonal_Shape_double.cc
required_instantiations_prolog_generated_test_sources = ppl_prolog_generated_test_Polyhedron.pl ppl_prolog_generated_test_Grid.pl ppl_prolog_generated_test_Rational_Box.pl ppl_prolog_generated_test_BD_Shape_mpz_class.pl ppl_prolog_generated_test_BD_Shape_mpq_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpz_class.pl ppl_prolog_generated_test_Octagonal_Shape_mpq_class.pl ppl_prolog_generated_test_Constraints_Product_C_Polyhedron_Grid.pl ppl_prolog_generated_test_Pointset_Powerset_C_Polyhedron.pl ppl_prolog_generated_test_Pointset_Powerset_NNC_Polyhedron.pl ppl_prolog_generated_test_Double_Box.pl ppl_prolog_generated_test_BD_Shape_double.pl ppl_prolog_generated_test_Octagonal_Shape_double.pl
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sicstus_prolog = 
srcdir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl/interfaces/C/tests
subdirs =  Watchdog
swi_prolog = 
swi_prolog_ld = 
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = /home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/build.arm.cortex-a15/sources/ppl
uudecode = 
xsb_prolog = 
yap_prolog = 
CHECKER = 
#CHECKER = \
#$(VALGRIND) --tool=memcheck -q --trace-children=yes --leak-check=yes \
#--num-callers=40 --leak-resolution=high \
#--suppressions=$(top_srcdir)/tests/valgrind_suppressions

TESTS_ENVIRONMENT = $(CHECKER)
AM_CPPFLAGS = \
-I$(top_builddir)/interfaces/C \
 \
-DNDEBUG=1

AM_CFLAGS = -pedantic -std=c89 -Werror

# MinGW's <stdlib.h> cannot be compiled in c89 mode.
#AM_CFLAGS = -pedantic -std=gnu89 -Werror
check_LIBRARIES = libppl_c_tests.a
libppl_c_tests_a_SOURCES = \
ppl_c_test.cc


# Dummy C++ source to cause C++ linking.
nodist_EXTRA_libppl_c_tests_a_SOURCES = \
dummy.cc

libppl_c_tests_a_CPPFLAGS = \
-I$(top_builddir)/interfaces/C \


LDADD = \
libppl_c_tests.a \
$(top_builddir)/interfaces/C/libppl_c.la \
-L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmpxx -L/home6/daewon2/Release/glibc/SP/SP_Linux/LP_Linux_Prj/REL/VDLinux.3.x.2012/toolchain/src/arm-mips-src-20121018/scripts/arm-v7a15v3r1/lib -lgmp

NORMAL_TESTS = \
formatted_output \
pip_test


#
# Sources for the tests
#
formatted_output_SOURCES = \
formatted_output.c \
print_to_buffer.h \
print_to_buffer.c


# Dummy C++ source to cause C++ linking.
# FIXME: why isn't enough to do this for libppl_c_tests.a?
nodist_EXTRA_formatted_output_SOURCES = \
dummy.cc

pip_test_SOURCES = \
pip_test.c


# Dummy C++ source to cause C++ linking.
# FIXME: why isn't enough to do this for libppl_c_tests.a?
nodist_EXTRA_pip_test_SOURCES = \
dummy.cc

watchdog1_SRCS = watchdog1.c
weightwatch1_SRCS = weightwatch1.c
noinst_HEADERS = \
ppl_c_test.h

#WATCHDOG_TESTS = \
#watchdog1 \
#weightwatch1

#WATCHDOG_LIBRARY_CPPFLAGS = \
#$(AM_CPPFLAGS) \
#-I$(top_builddir)/Watchdog \
#-I$(top_builddir)/Watchdog/src

#WATCHDOG_LIBRARY_LDADD = \
#$(LDADD) \
#$(top_builddir)/Watchdog/src/libpwl.la

#watchdog1_SOURCES = $(watchdog1_SRCS)
#watchdog1_CPPFLAGS = $(WATCHDOG_LIBRARY_CPPFLAGS)
#watchdog1_LDADD = $(WATCHDOG_LIBRARY_LDADD)

# Dummy C++ source to cause C++ linking.
# FIXME: why isn't enough to do this for libppl_c_tests.a?
#nodist_EXTRA_watchdog1_SOURCES = \
#dummy.cc

#weightwatch1_SOURCES = $(weightwatch1_SRCS)
#weightwatch1_CPPFLAGS = $(WATCHDOG_LIBRARY_CPPFLAGS)
#weightwatch1_LDADD = $(WATCHDOG_LIBRARY_LDADD)

# Dummy C++ source to cause C++ linking.
# FIXME: why isn't enough to do this for libppl_c_tests.a?
#nodist_EXTRA_weightwatch1_SOURCES = \
#dummy.cc

EXTRA_DIST = $(watchdog1_SRCS)
BUGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign interfaces/C/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign interfaces/C/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)
libppl_c_tests.a: $(libppl_c_tests_a_OBJECTS) $(libppl_c_tests_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libppl_c_tests.a
	$(AM_V_AR)$(libppl_c_tests_a_AR) libppl_c_tests.a $(libppl_c_tests_a_OBJECTS) $(libppl_c_tests_a_LIBADD)
	$(AM_V_at)$(RANLIB) libppl_c_tests.a

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
formatted_output$(EXEEXT): $(formatted_output_OBJECTS) $(formatted_output_DEPENDENCIES) 
	@rm -f formatted_output$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(formatted_output_OBJECTS) $(formatted_output_LDADD) $(LIBS)
pip_test$(EXEEXT): $(pip_test_OBJECTS) $(pip_test_DEPENDENCIES) 
	@rm -f pip_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pip_test_OBJECTS) $(pip_test_LDADD) $(LIBS)
watchdog1$(EXEEXT): $(watchdog1_OBJECTS) $(watchdog1_DEPENDENCIES) 
	@rm -f watchdog1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(watchdog1_OBJECTS) $(watchdog1_LDADD) $(LIBS)
weightwatch1$(EXEEXT): $(weightwatch1_OBJECTS) $(weightwatch1_DEPENDENCIES) 
	@rm -f weightwatch1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(weightwatch1_OBJECTS) $(weightwatch1_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dummy.Po
include ./$(DEPDIR)/formatted_output.Po
include ./$(DEPDIR)/libppl_c_tests_a-dummy.Po
include ./$(DEPDIR)/libppl_c_tests_a-ppl_c_test.Po
include ./$(DEPDIR)/pip_test.Po
include ./$(DEPDIR)/print_to_buffer.Po
include ./$(DEPDIR)/watchdog1-dummy.Po
include ./$(DEPDIR)/watchdog1-watchdog1.Po
include ./$(DEPDIR)/weightwatch1-dummy.Po
include ./$(DEPDIR)/weightwatch1-weightwatch1.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

watchdog1-watchdog1.o: watchdog1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT watchdog1-watchdog1.o -MD -MP -MF $(DEPDIR)/watchdog1-watchdog1.Tpo -c -o watchdog1-watchdog1.o `test -f 'watchdog1.c' || echo '$(srcdir)/'`watchdog1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/watchdog1-watchdog1.Tpo $(DEPDIR)/watchdog1-watchdog1.Po
#	$(AM_V_CC) \
#	source='watchdog1.c' object='watchdog1-watchdog1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o watchdog1-watchdog1.o `test -f 'watchdog1.c' || echo '$(srcdir)/'`watchdog1.c

watchdog1-watchdog1.obj: watchdog1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT watchdog1-watchdog1.obj -MD -MP -MF $(DEPDIR)/watchdog1-watchdog1.Tpo -c -o watchdog1-watchdog1.obj `if test -f 'watchdog1.c'; then $(CYGPATH_W) 'watchdog1.c'; else $(CYGPATH_W) '$(srcdir)/watchdog1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/watchdog1-watchdog1.Tpo $(DEPDIR)/watchdog1-watchdog1.Po
#	$(AM_V_CC) \
#	source='watchdog1.c' object='watchdog1-watchdog1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o watchdog1-watchdog1.obj `if test -f 'watchdog1.c'; then $(CYGPATH_W) 'watchdog1.c'; else $(CYGPATH_W) '$(srcdir)/watchdog1.c'; fi`

weightwatch1-weightwatch1.o: weightwatch1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT weightwatch1-weightwatch1.o -MD -MP -MF $(DEPDIR)/weightwatch1-weightwatch1.Tpo -c -o weightwatch1-weightwatch1.o `test -f 'weightwatch1.c' || echo '$(srcdir)/'`weightwatch1.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/weightwatch1-weightwatch1.Tpo $(DEPDIR)/weightwatch1-weightwatch1.Po
#	$(AM_V_CC) \
#	source='weightwatch1.c' object='weightwatch1-weightwatch1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o weightwatch1-weightwatch1.o `test -f 'weightwatch1.c' || echo '$(srcdir)/'`weightwatch1.c

weightwatch1-weightwatch1.obj: weightwatch1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT weightwatch1-weightwatch1.obj -MD -MP -MF $(DEPDIR)/weightwatch1-weightwatch1.Tpo -c -o weightwatch1-weightwatch1.obj `if test -f 'weightwatch1.c'; then $(CYGPATH_W) 'weightwatch1.c'; else $(CYGPATH_W) '$(srcdir)/weightwatch1.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/weightwatch1-weightwatch1.Tpo $(DEPDIR)/weightwatch1-weightwatch1.Po
#	$(AM_V_CC) \
#	source='weightwatch1.c' object='weightwatch1-weightwatch1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o weightwatch1-weightwatch1.obj `if test -f 'weightwatch1.c'; then $(CYGPATH_W) 'weightwatch1.c'; else $(CYGPATH_W) '$(srcdir)/weightwatch1.c'; fi`

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libppl_c_tests_a-ppl_c_test.o: ppl_c_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libppl_c_tests_a-ppl_c_test.o -MD -MP -MF $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Tpo -c -o libppl_c_tests_a-ppl_c_test.o `test -f 'ppl_c_test.cc' || echo '$(srcdir)/'`ppl_c_test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Tpo $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Po
#	$(AM_V_CXX) \
#	source='ppl_c_test.cc' object='libppl_c_tests_a-ppl_c_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libppl_c_tests_a-ppl_c_test.o `test -f 'ppl_c_test.cc' || echo '$(srcdir)/'`ppl_c_test.cc

libppl_c_tests_a-ppl_c_test.obj: ppl_c_test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libppl_c_tests_a-ppl_c_test.obj -MD -MP -MF $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Tpo -c -o libppl_c_tests_a-ppl_c_test.obj `if test -f 'ppl_c_test.cc'; then $(CYGPATH_W) 'ppl_c_test.cc'; else $(CYGPATH_W) '$(srcdir)/ppl_c_test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Tpo $(DEPDIR)/libppl_c_tests_a-ppl_c_test.Po
#	$(AM_V_CXX) \
#	source='ppl_c_test.cc' object='libppl_c_tests_a-ppl_c_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libppl_c_tests_a-ppl_c_test.obj `if test -f 'ppl_c_test.cc'; then $(CYGPATH_W) 'ppl_c_test.cc'; else $(CYGPATH_W) '$(srcdir)/ppl_c_test.cc'; fi`

libppl_c_tests_a-dummy.o: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libppl_c_tests_a-dummy.o -MD -MP -MF $(DEPDIR)/libppl_c_tests_a-dummy.Tpo -c -o libppl_c_tests_a-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libppl_c_tests_a-dummy.Tpo $(DEPDIR)/libppl_c_tests_a-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='libppl_c_tests_a-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libppl_c_tests_a-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc

libppl_c_tests_a-dummy.obj: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libppl_c_tests_a-dummy.obj -MD -MP -MF $(DEPDIR)/libppl_c_tests_a-dummy.Tpo -c -o libppl_c_tests_a-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libppl_c_tests_a-dummy.Tpo $(DEPDIR)/libppl_c_tests_a-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='libppl_c_tests_a-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libppl_c_tests_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libppl_c_tests_a-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`

watchdog1-dummy.o: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT watchdog1-dummy.o -MD -MP -MF $(DEPDIR)/watchdog1-dummy.Tpo -c -o watchdog1-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/watchdog1-dummy.Tpo $(DEPDIR)/watchdog1-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='watchdog1-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o watchdog1-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc

watchdog1-dummy.obj: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT watchdog1-dummy.obj -MD -MP -MF $(DEPDIR)/watchdog1-dummy.Tpo -c -o watchdog1-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/watchdog1-dummy.Tpo $(DEPDIR)/watchdog1-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='watchdog1-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(watchdog1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o watchdog1-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`

weightwatch1-dummy.o: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weightwatch1-dummy.o -MD -MP -MF $(DEPDIR)/weightwatch1-dummy.Tpo -c -o weightwatch1-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/weightwatch1-dummy.Tpo $(DEPDIR)/weightwatch1-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='weightwatch1-dummy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weightwatch1-dummy.o `test -f 'dummy.cc' || echo '$(srcdir)/'`dummy.cc

weightwatch1-dummy.obj: dummy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT weightwatch1-dummy.obj -MD -MP -MF $(DEPDIR)/weightwatch1-dummy.Tpo -c -o weightwatch1-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/weightwatch1-dummy.Tpo $(DEPDIR)/weightwatch1-dummy.Po
#	$(AM_V_CXX) \
#	source='dummy.cc' object='weightwatch1-dummy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(weightwatch1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o weightwatch1-dummy.obj `if test -f 'dummy.cc'; then $(CYGPATH_W) 'dummy.cc'; else $(CYGPATH_W) '$(srcdir)/dummy.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


$(top_builddir)/interfaces/C/libppl_c.la:
	$(MAKE) $(AM_MAKEFLAGS) -C $(top_builddir)/interfaces/C libppl_c.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
